################################################################################
#                                                                              #
#  Copyright 2019 Broadcom. The term Broadcom refers to Broadcom Inc. and/or   #
#  its subsidiaries.                                                           #
#                                                                              #
#  Licensed under the Apache License, Version 2.0 (the "License");             #
#  you may not use this file except in compliance with the License.            #
#  You may obtain a copy of the License at                                     #
#                                                                              #
#     http://www.apache.org/licenses/LICENSE-2.0                               #
#                                                                              #
#  Unless required by applicable law or agreed to in writing, software         #
#  distributed under the License is distributed on an "AS IS" BASIS,           #
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    #
#  See the License for the specific language governing permissions and         #
#  limitations under the License.                                              #
#                                                                              #
################################################################################

TOPDIR := ../..
BUILD_DIR := $(TOPDIR)/build

YANGDIR                     := $(BUILD_DIR)/yang
YANGDIR_COMMON              := $(YANGDIR)/common
YANGDIR_EXTENSIONS          := $(YANGDIR)/extensions
YANGDIR_ANNOTATIONS         := $(YANGDIR)/annotations

YANGDIR_SONIC               := $(YANGDIR)/sonic
YANGDIR_SONIC_COMMON        := $(YANGDIR_SONIC)/common

include sonic/import.mk
SONICYANG_IMPORT_DIR    ?= $(TOPDIR)/../sonic-yang-models/cvlyang-models
SONIC_YANG_IMPORT_FILES  = $(addprefix $(SONICYANG_IMPORT_DIR)/, $(SONICYANG_IMPORTS))

SYNC_STD_YANGS    := $(YANGDIR)/.sync_std_yangs
SYNC_EXT_YANGS    := $(YANGDIR)/.sync_ext_yangs
SYNC_SONIC_YANGS  := $(YANGDIR)/.sync_sonic_yangs
SYNC_ANNOT_YANGS  := $(YANGDIR)/.sync_annot_yangs
PREPARE_YANGS     := $(SYNC_STD_YANGS) $(SYNC_EXT_YANGS) $(SYNC_ANNOT_YANGS) $(SYNC_SONIC_YANGS)

YANG_ANNOTS_CHK   := .annots_checked

TOOLS_DIR         := $(TOPDIR)/tools
PYANG_PLUGIN_DIR  := $(TOOLS_DIR)/pyang/pyang_plugins
PYANG             ?= pyang

ALL_TARGETS := allyangs.tree allyangs_tree.html
ALL_TARGETS += sonic_allyangs.tree sonic_allyangs_tree.html
ALL_TARGETS += #$(YANG_ANNOTS_CHK)

all: $(ALL_TARGETS)


#======================================================================
# Syntax check for annotation files
#======================================================================

.PHONY: annot
annot: $(YANG_ANNOTS_CHK)

$(YANG_ANNOTS_CHK): $(PREPARE_YANGS)
	$(PYANG) --strict -f tree \
		-p $(YANGDIR_COMMON):$(YANGDIR):$(YANGDIR_EXTENSIONS):$(YANGDIR_SONIC) \
		$(YANGDIR_ANNOTATIONS)/*.yang > /dev/null
	touch $@

#======================================================================
# Yang tree for standard yangs and their extensions
#======================================================================

allyangs.tree: $(SYNC_STD_YANGS) $(SYNC_EXT_YANGS)
	$(PYANG) \
		-f tree \
		-o $@ \
		-p $(YANGDIR_COMMON):$(YANGDIR) \
		$(YANGDIR)/*.yang $$(find $(YANGDIR_EXTENSIONS) -name '*.yang')
	@echo "+++++ Generation of  YANG tree for Yang modules completed +++++"

allyangs_tree.html: $(SYNC_STD_YANGS) $(SYNC_EXT_YANGS)
	$(PYANG) \
		-f jstree \
		-o $@ \
		-p $(YANGDIR_COMMON):$(YANGDIR) \
		$(YANGDIR)/*.yang $$(find $(YANGDIR_EXTENSIONS) -name '*.yang')
	@echo "+++++ Generation of  HTML tree for Yang modules completed +++++"

#======================================================================
# Yang tree for SONiC yangs
#======================================================================

sonic_allyangs.tree: $(SYNC_SONIC_YANGS)
	$(PYANG) \
		-f tree \
		-o $@ \
		-p $(YANGDIR_SONIC_COMMON):$(YANGDIR_SONIC):$(YANGDIR_COMMON) \
		$(YANGDIR_SONIC)/*.yang
	@echo "+++++ Generation of  YANG tree for Sonic Yang modules completed +++++"

sonic_allyangs_tree.html: $(SYNC_SONIC_YANGS)
	$(PYANG) \
		-f jstree \
		-o $@ \
		-p $(YANGDIR_SONIC_COMMON):$(YANGDIR_SONIC):$(YANGDIR_COMMON) \
		$(YANGDIR_SONIC)/*.yang
	@echo "+++++ Generation of  HTML tree for Sonic Yang modules completed +++++"

#======================================================================
# Sync and patch yangs into build/yang directory
#======================================================================

.SECONDEXPANSION:

.PRECIOUS: %/. 
%/.:
	mkdir -p $@

$(SYNC_STD_YANGS): $(wildcard *.yang) $(wildcard common/*.yang) | $$(@D)/.
	rsync -oavh --include='*/' --include='*.yang' --exclude='*' *.yang common $(@D)
	touch $@

$(SYNC_EXT_YANGS): $(wildcard extensions/*.yang) | $$(@D)/.
	rsync -oavh --include='*/' --include='*.yang' --exclude='*' extensions $(@D)
	touch $@

$(SYNC_ANNOT_YANGS): $(wildcard annotations/*.yang) | $$(@D)/.
	rsync -oavh --include='*/' --include='*.yang' --exclude='*' annotations $(@D)
	touch $@

$(SYNC_SONIC_YANGS): $(wildcard sonic/*.yang) $(SONIC_YANG_IMPORT_FILES) | $$(@D)/.
	rsync -oavh --include='*/' --include='*.yang' --exclude='*' sonic $(@D)
ifneq ($(SONIC_YANG_IMPORT_FILES),)
	rsync -oavh $(SONIC_YANG_IMPORT_FILES) $(@D)/sonic
endif
	touch $@

#======================================================================
# Cleanups
#======================================================================

clean:
	$(RM) $(ALL_TARGETS)
	$(RM) -r $(YANGDIR)

